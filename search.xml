<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>博客搭建作业</title>
    <url>/2022/12/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<h2 id="参与制作人员"><a href="#参与制作人员" class="headerlink" title="参与制作人员"></a>参与制作人员</h2><p>王鑫-2022211251-2022211309</p>
<p>王柏程-2022211243-2022211309</p>
<p>陈彦禛-2022211248-2022211309</p>
<p>李佳豪-2022211245-2022211309</p>
<h2 id="6-21-实验7-13-选择排序"><a href="#6-21-实验7-13-选择排序" class="headerlink" title="6-21 实验7_13_选择排序"></a><strong>6-21 实验7_13_选择排序</strong></h2><p>设计函数 void SelectSort(int a[],int n); 使用选择排序算法对数组a的前n个元素按照升序的方式排序。</p>
<p>选择排序算法描述如下：<br>从a[0]到a[n-1]这段元素中找最小元素a[min]，a[0]和a[min]交换；接着，从a[1]到a[n -1]这段元素中找最小元素a[min]，a[1]和a[min]交换；依次类推，直到从a[n－2]到a[n -1]这段元素中找最小元素a[min]，a[n－2]和a[min]交换。</p>
<p>输入：首先输入一个整数n(1&lt;n&lt;&#x3D;1000)，代表待排序元素的个数。然后是n个整数，每个整数不会超过int型的存储范围</p>
<p>输出为n-1行，依次为1到n-1趟排序后数组内各个元素。每行输出的顺序为a[0]至a[n-1]，数与数之间用空格分开，注意第n个数后没有空格而是换行符。</p>
<p>建议设计两个辅助函数:</p>
<p>函数功能：找数组中的最小值元素，并返回其下标</p>
<p>参数说明：数组名，查找起始位置下标，查找终止位置下标</p>
<p>int findMin(int data[], int startLoc, int endLoc) ;</p>
<p>函数功能：依次输出数组中各个元素，数与数之间用空格分开，最后一个数后没有空格而是换行符</p>
<p>参数说明：数组名，数组内元素个数</p>
<p>void outputData(int data[],int elementCount) ;</p>
<h3 id="函数接口定义"><a href="#函数接口定义" class="headerlink" title="函数接口定义"></a>函数接口定义</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">三个函数原型如下：</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序（升序） </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectSort</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数功能：找数组中的最小值元素，并返回其下标 </span></span><br><span class="line"><span class="comment">//参数说明：数组名，查找起始位置下标，查找终止位置下标</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span> data[], <span class="type">int</span> startLoc, <span class="type">int</span> endLoc)</span> ; </span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组中所有元素 </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">outputData</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span> ;</span><br></pre></td></tr></table></figure></div>

<h3 id="裁判测试程序样例"><a href="#裁判测试程序样例" class="headerlink" title="裁判测试程序样例"></a>裁判测试程序样例</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">函数被调用的例子如下：</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序（升序） </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectSort</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数功能：找数组中的最小值元素，并返回其下标 </span></span><br><span class="line"><span class="comment">//参数说明：数组名，查找起始位置下标，查找终止位置下标</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span> data[], <span class="type">int</span> startLoc, <span class="type">int</span> endLoc)</span> ; </span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组中所有元素 </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">outputData</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span> ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span>        n , i,    num[<span class="number">1010</span>] ;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n); </span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span> ; i &lt; n ; i++ ) </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num[i]) ;</span><br><span class="line">    selectSort(num,n) ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure></div>

<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>在这里给出一组输入。例如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">49 38 65 97 76 13 27 4</span><br></pre></td></tr></table></figure></div>

<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>在这里给出相应的输出。例如：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 38 65 97 76 13 27 49</span><br><span class="line">4 13 65 97 76 38 27 49</span><br><span class="line">4 13 27 97 76 38 65 49</span><br><span class="line">4 13 27 38 76 97 65 49</span><br><span class="line">4 13 27 38 49 97 65 76</span><br><span class="line">4 13 27 38 49 65 97 76</span><br><span class="line">4 13 27 38 49 65 76 97</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">代码长度限制 16 KB</span><br><span class="line">时间限制	400 ms</span><br><span class="line">内存限制	64 MB</span><br></pre></td></tr></table></figure></div>

<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>这种题目看起来吓人，但是做起来难度并没有想象中那么大。</p>
<p>代码如下:</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//选择排序（升序） </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selectSort</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; elementCount - <span class="number">1</span>; i ++)&#123;</span><br><span class="line">        <span class="type">int</span> min = findMin(data, i, elementCount);</span><br><span class="line">        <span class="type">int</span> tmp = data[min];</span><br><span class="line">        data[min] = data[i];</span><br><span class="line">        data[i] = tmp;</span><br><span class="line">        outputData(data, elementCount);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; elementCount - <span class="number">1</span>)   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数功能：找数组中的最小值元素，并返回其下标 </span></span><br><span class="line"><span class="comment">//参数说明：数组名，查找起始位置下标，查找终止位置下标</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span> data[], <span class="type">int</span> startLoc, <span class="type">int</span> endLoc)</span>&#123;</span><br><span class="line">    <span class="type">int</span> res = startLoc;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = startLoc; i &lt; endLoc; i ++)</span><br><span class="line">        <span class="keyword">if</span> (data[i] &lt; data[res])</span><br><span class="line">            res = i;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组中所有元素 </span></span><br><span class="line"><span class="comment">//参数说明：数组，数组中已有元素个数 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">outputData</span><span class="params">(<span class="type">int</span> data[],<span class="type">int</span> elementCount)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; elementCount; i ++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span> ,data[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; elementCount - <span class="number">1</span>)   <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
  </entry>
</search>
